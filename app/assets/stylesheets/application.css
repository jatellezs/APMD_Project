/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 *= requireimport @keyframes/core
 */


body {
    max-width: 100%;
    margin: 0;
}

.content {
    width: 100vw;
    height: auto;
    min-height: 100vh;
    /*background-image: linear-gradient(to bottom, #202020, #25383C);*/
    background-image: url('neural3.jpg');
    background-repeat: no-repeat;
    background-size: cover;
}

.graph-row {
    display: flex;
    justify-content: center;
    height: 80vh;
    padding-top: 7vw;
}

#chart_div > div {
    display: table-cell;
    vertical-align: middle;
}

#heatmap_div > canvas {
    display: table-cell;
    vertical-align: middle;
}

#menuToggle {
    display: block;
    position: fixed; /*was absolute*/
    top: 50px;
    left: 50px;
  
    z-index: 1;
    
    -webkit-user-select: none;
    user-select: none;
}

#menuToggle a {
    text-decoration: none;
    color: #232323;
    
    transition: color 0.3s ease;
}

#menuToggle a:hover {
    color: tomato;
}

#menuToggle input{
    display: block;
    width: 40px;
    height: 32px;
    position: absolute;
    top: -7px;
    left: -5px;
    
    cursor: pointer;
    
    opacity: 0; 
    z-index: 2; 
    
    -webkit-touch-callout: none;
}

#menuToggle span{
    display: block;
    width: 33px;
    height: 4px;
    margin-bottom: 5px;
    position: relative;
    
    background: #cdcdcd;
    border-radius: 3px;
    
    z-index: 1;
    
    transform-origin: 4px 0px;
    
    transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                background 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                opacity 0.55s ease;
}

#menuToggle span:first-child {
    transform-origin: 0% 0%;
}

#menuToggle span:nth-last-child(2) {
    transform-origin: 0% 100%;
}

#menuToggle input:checked ~ span {
    opacity: 1;
    transform: rotate(45deg) translate(-2px, -1px);
    background: #232323;
}

#menuToggle input:checked ~ span:nth-last-child(3) {
    opacity: 0;
    transform: rotate(0deg) scale(0.2, 0.2);
}

#menuToggle input:checked ~ span:nth-last-child(2) {
    transform: rotate(-45deg) translate(0, -1px);
}

#menu {
    position: fixed; /*was absolute*/
    width: 12vw;
    height: 87.8vh;
    margin: -100px 0 0 -50px;
    padding: 0 50px;
    padding-top: 15vh;

    opacity: 0.9;
    
    background: #ededed;
    list-style-type: none;
    -webkit-font-smoothing: antialiased;
    
    transform-origin: 0% 0%;
    transform: translate(-100%, 0);
    
    transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0);
}

#menu li {
    padding: 0.55vw 0;
    font-size: 1.2vw;
    font-family: Arial, Helvetica, sans-serif;
}

#menuToggle input:checked ~ ul {
    transform: none;
}

.svg-item {
    width: 22%;
    font-size: 16px;
    margin: 0 auto;
    animation: donutfade 1s;
}

@keyframes donutfade {
  /* this applies to the whole svg item wrapper */
    0% {
        opacity: .2;
    }
    100% {
        opacity: 1;
    }
}

@media (min-width: 225px) {
    .svg-item {
        width: 22%;
    }
}

.donut-ring {
    stroke: #EBEBEB;
}

.donut-segment {
    transform-origin: center;
    stroke: #FF6200;
}

.donut-segment-2 {
    stroke: blue;
    animation: donut1 3s;
}

.donut-segment-3 {
    stroke: blue;
    animation: donut2 3s;
}

.donut-segment-4 {
    stroke: #ed1e79;
    animation: donut3 3s;
}

.segment-1{fill:#ccc;}
.segment-2{fill:aqua;}
.segment-3{fill:#d9e021;}
.segment-4{fill:#ed1e79;}

.donut-percent {
    animation: donutfadelong 1s;
}

@keyframes donutfadelong {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes donut1 {
    0% {
        stroke-dasharray: 0, 100;
    }
    100% {
        stroke-dasharray: 70, 30;
    }
}

@keyframes donut2 {
    0% {
        stroke-dasharray: 0, 100;
    }
    100% {
        stroke-dasharray: 100, 0;
    }
}

@keyframes donut3{
    0% {
        stroke-dasharray: 0, 100;
    }
    100% {
        stroke-dasharray: 1, 99;
    }
}

.donut-text {
    font-family: Arial, Helvetica, sans-serif;
    fill: #FF6200;
}
.donut-text-1 {
    fill: blue;
}
.donut-text-2 {
    fill: #d9e021;
}
.donut-text-3 {
    fill: #ed1e79;
}

.donut-label {
    font-size: 0.28em;
    font-weight: 700;
    line-height: 1;
    fill: #000;
    transform: translateY(0.25em);
}

.donut-percent {
    font-size: 0.5em;
    line-height: 1;
    transform: translateY(0.5em);
    font-weight: bold;
}

.donut-data {
    font-size: 0.12em;
    line-height: 1;
    transform: translateY(0.5em);
    text-align: center;
    text-anchor: middle;
    color:#666;
    fill: white;
    animation: donutfadelong 1s;
}


.grid {
    display: inline-grid;
    position: relative;
    counter-reset: columnLines 1 rowLines 1;
    grid-template-rows: repeat(9, 55.5px);
    border: 1px solid black;
    margin: 25px;
  }
  
  .row {
    display: grid;
    position: relative;
    color: white;
    grid-template-columns: repeat(9, 55.5px);
    counter-increment: rowLines;
  }
  
  .row:not(:last-child) {
    border-bottom: 1px solid black;
  }
  
  .row > div:not(:last-child) {
    border-right: 1px solid black;
  }
  
  /*Column lines*/
  .row:first-child:before {
    content: "1";
    transform: translate(-50%, -100%);
    position: absolute;
    top: 0;
    left: 0;
  }
  
  .row:first-child > div {
    counter-increment: columnLines;
    position: relative;
  }
  
  .row:first-child > div:after{
    transform: translate(50%, -100%);
    content: counter(columnLines);
    position: absolute;
    top: 0;
    right: 0;
  }
  
  /*Row lines*/
  .row:after {
    transform: translate(100%, 50%);
    content: counter(rowLines);
    position: absolute;
    bottom: 0;
    right: -5px;
  }
  
  .grid:before {
    transform: translate(100%, -50%);
    position: absolute;
    right: -5px;
    content: "1";
    color: white;
    top: 0;
  }