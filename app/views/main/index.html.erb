<div class="content">
    <h1 style="width: 100%; margin: 0; color: white; text-align: center; padding-top: 4vw; position: absolute;">Highest Ratings by Title Type</h1>

    <div class="graph-row">
        <div id="chart_div" style="padding: 0 2vw; display: table; height: 100%;"></div>
        <div class="svg-item">
            <svg width="100%" height="100%" viewBox="0 0 40 40" class="donut">
                <circle class="donut-hole" cx="20" cy="20" r="15.91549430918954" fill="#fff" style="opacity: 0;"></circle>
                <circle class="donut-ring" cx="20" cy="20" r="15.91549430918954" fill="transparent" stroke-width="3.5"></circle>
                <circle class="donut-segment donut-segment-2" cx="20" cy="20" r="15.91549430918954" fill="transparent" stroke-width="3.5" stroke-dasharray="70 30" stroke-dashoffset="25"></circle>
                <g class="donut-text donut-text-1">
            
                    <text y="50%" transform="translate(0, 2)">
                        <tspan x="50%" text-anchor="middle" class="donut-percent" id="donut_percent">69%</tspan>   
                    </text>
                    <text y="60%" transform="translate(0, 2)">
                        <tspan x="50%" text-anchor="middle" class="donut-data" id="donut_data">3450 widgets</tspan>   
                    </text>
                </g>
            </svg>
        </div>
    </div>
</div>

<%= content_tag :div, '', id: 'mycontainer2', data: { source: @data_list_2 } %>

<script>
    // Load the Visualization API and the corechart package.
    google.charts.load('visualization', '1.1', {'packages':['corechart']});

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawColumnChart);

    var data_table = $('#mycontainer2').data('source');
    console.log(data_table);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawColumnChart() {

        var widthSize = window.innerWidth / 2.2; 

        // Create the data table.
        var data = new google.visualization.arrayToDataTable(data_table);
        /*data.addColumn('number', 'Title Type');
        data.addColumn('number', 'Average');
        data.addRows(data_table);*/

        //data.addRows(data_table["value"]);

        // Set chart options
        var options = {'title':'Average Rating per Title Type',
                        'width':widthSize,
                        'height':(2 * widthSize) / 3,
                        'backgroundColor': 'transparent',
                        titleTextStyle: {
                            color: 'white'
                        },
                        hAxis: {
                            title: "Title Type",
                            textStyle: {
                                color: 'white'
                            },
                            titleTextStyle: {
                                color: 'white'
                            },
                            gridlines: {count: 5}
                        },
                        vAxis: {
                            title: "Average Rating",
                            textStyle: {
                                color: 'white'
                            },
                            titleTextStyle: {
                                color: 'white'
                            }
                        },
                        legend: {
                            textStyle: {
                                color: 'white'
                            },
                            position: 'none'
                        },
                        animation: {
                            duration: 1500,
                            startup: true,
                            ease: 'out'
                        }};

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }

    function resize() {
        drawColumnChart()
    }

    if (window.addEventListener) {
        window.addEventListener('resize', resize);
    }
    else {
        window.attachEvent('onresize', resize);
    }

    function changePieData(){
        var maxRating = 0.0;
        var maxCategory = 0;
        for(i = 0; i < data_table.length; i++){
            if(data_table[i][1] > maxRating){
                maxRating = data_table[i][1];
                maxCategory = data_table[i][0];
            }
        }

        if(maxCategory == 0){
            maxCategory = "Short";
        }
        else if (maxCategory == 1){
            maxCategory = "Movie";
        }
        else if (maxCategory == 2){
            maxCategory = "TV Movie";
        }
        else if (maxCategory == 3){
            maxCategory = "TV Short";
        }
        else if (maxCategory == 4){
            maxCategory = "TV Special";
        }
        else if (maxCategory == 5){
            maxCategory = "VideoGame";
        }

        var new_percent = maxRating.toFixed(2).toString();
        var new_data = maxCategory.toString();

        document.getElementById('donut_percent').innerHTML = new_percent;
        document.getElementById('donut_data').innerHTML = new_data;
    }

    document.addEventListener('DOMContentLoaded', changePieData(), false);

</script>